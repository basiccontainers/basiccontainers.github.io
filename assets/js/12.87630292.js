(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{345:function(e,n,t){e.exports=t.p+"assets/img/aksworkloads.3a80f9a3.png"},376:function(e,n,t){e.exports=t.p+"assets/img/modify.72d79693.png"},415:function(e,n,t){"use strict";t.r(n);var a=t(46),s=Object(a.a)({},(function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"create-and-access-aks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-and-access-aks"}},[e._v("#")]),e._v(" Create and Access AKS")]),e._v(" "),a("p",[e._v("In this exercise  we will create a Kubernetes cluster that can autoscale and is configured to pull images  automatically from our registry . To achieve this so we will:")]),e._v(" "),a("ul",[a("li",[e._v("Use the Azure CLI")]),e._v(" "),a("li",[e._v("Configure your local access credentials to control your cluster using kubectl")]),e._v(" "),a("li",[e._v("Take some first steps")]),e._v(" "),a("li",[e._v("Run our first pod")])]),e._v(" "),a("h2",{attrs:{id:"create-the-cluster"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-the-cluster"}},[e._v("#")]),e._v(" Create the cluster")]),e._v(" "),a("ul",[a("li",[e._v("Create resoruce group for cluster")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("az group create --location westeurope --name $resourceGroup \n")])])]),a("ul",[a("li",[e._v("Create AKS: The following script creates an AKS with the following configuration")])]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Parameter")]),e._v(" "),a("th",[e._v("Description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("--resource-group")]),e._v(" "),a("td",[e._v("The resource group where the AKS cluster will be created")])]),e._v(" "),a("tr",[a("td",[e._v("--nodepool-name")]),e._v(" "),a("td",[e._v("Name of the nodepool where our apps will run")])]),e._v(" "),a("tr",[a("td",[e._v("--attach-acr")]),e._v(" "),a("td",[e._v("The resourceid or name of the ACR registry. This is the name of the registry in the Registry overview page. Alternatively you can execute the following command   "),a("code",[e._v("az acr show --name ivanacrdemo --query id")])])]),e._v(" "),a("tr",[a("td",[e._v("Registry name")]),e._v(" "),a("td",[e._v("Enter a unique name and make a note of it for later.")])]),e._v(" "),a("tr",[a("td",[e._v("--min-count")]),e._v(" "),a("td",[e._v("The min number of nodes that will run when using cluster-autoscaler. When the cluster down scales it will not go below this value")])]),e._v(" "),a("tr",[a("td",[e._v("--max-count")]),e._v(" "),a("td",[e._v("The max numebr of nodes that the cluster auto scaler will scale to")])]),e._v(" "),a("tr",[a("td",[e._v("--zones 3")]),e._v(" "),a("td",[e._v("Spread the node pool vms across multiple zones for resilency. Can be 1,2,3. This indicates how many zones it should be spread across")])]),e._v(" "),a("tr",[a("td",[e._v("--enable-cluster-autoscaler")]),e._v(" "),a("td",[e._v("Enabled cluster auto scaler")])]),e._v(" "),a("tr",[a("td",[e._v("--kubernetes-version")]),e._v(" "),a("td",[e._v("The version of kubernetes to deploy")])])])]),e._v(" "),a("ul",[a("li",[e._v("Set variables")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('## Set Variables \nRESOURCE_GROUP="ivanresourcegroup"\nAKS_CLUSTER="mysimpleaks"\nACR_REGISTRY="ivanacrdemo"\n')])])]),a("ul",[a("li",[e._v("Create Cluster")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('## Create Cluster \naz aks create \\\n --resource-group $RESOURCE_GROUP \\\n --node-vm-size=Standard_D2s_v3 \\\n --kubernetes-version=1.20.9 \\\n --name $AKS_CLUSTER \\\n --nodepool-name="apppool" \\\n --enable-cluster-autoscaler \\\n --min-count 1 \\\n --max-count 2 \\\n --zones 3 \\\n --attach-acr $ACR_REGISTRY \\\n --node-count 1 \\\n --generate-ssh-keys\n')])])]),a("ul",[a("li",[e._v("Output")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(' ivan@Azure:~$ az aks create \\\n>  --resource-group $RESOURCE_GROUP \\\n>  --node-vm-size=Standard_D2s_v3 \\\n>  --kubernetes-version=1.20.9 \\\n>  --name $AKS_CLUSTER \\\n>  --nodepool-name="apppool" \\\n>  --enable-cluster-autoscaler \\\n>  --min-count 1 \\\n>  --max-count 2 \\\n>  --zones 3 \\\n>  --attach-acr $ACR_REGISTRY \\\n>  --node-count 1 \\\n>  --generate-ssh-keys\nAAD role propagation done[############################################]  100.0000%{\n  "aadProfile": null,\n  "addonProfiles": null,\n  "agentPoolProfiles": [\n    {\n      "availabilityZones": [\n        "3"\n      ],\n      "count": 1,\n      "enableAutoScaling": true,\n      "enableEncryptionAtHost": false,\n      "enableFips": false,\n      "enableNodePublicIp": false,\n      "enableUltraSsd": false,\n      "gpuInstanceProfile": null,\n      "kubeletConfig": null,\n      "kubeletDiskType": "OS",\n      "linuxOsConfig": null,\n      "maxCount": 2,\n      "maxPods": 110,\n      "minCount": 1,\n      "mode": "System",\n      "name": "apppool",\n      "nodeImageVersion": "AKSUbuntu-1804gen2containerd-2021.09.28",\n      "nodeLabels": null,\n      "nodePublicIpPrefixId": null,\n      "nodeTaints": null,\n      "orchestratorVersion": "1.20.9",\n      "osDiskSizeGb": 128,\n      "osDiskType": "Managed",\n      "osSku": "Ubuntu",\n      "osType": "Linux",\n      "podSubnetId": null,\n      "powerState": {\n        "code": "Running"\n      },\n      "provisioningState": "Succeeded",\n      "proximityPlacementGroupId": null,\n      "scaleDownMode": null,\n      "scaleSetEvictionPolicy": null,\n      "scaleSetPriority": null,\n      "spotMaxPrice": null,\n      "tags": null,\n      "type": "VirtualMachineScaleSets",\n      "upgradeSettings": null,\n      "vmSize": "Standard_D2s_v3",\n      "vnetSubnetId": null\n    }\n  ],\n  "apiServerAccessProfile": null,\n  "autoScalerProfile": {\n    "balanceSimilarNodeGroups": "false",\n    "expander": "random",\n    "maxEmptyBulkDelete": "10",\n    "maxGracefulTerminationSec": "600",\n    "maxNodeProvisionTime": "15m",\n    "maxTotalUnreadyPercentage": "45",\n    "newPodScaleUpDelay": "0s",\n    "okTotalUnreadyCount": "3",\n    "scaleDownDelayAfterAdd": "10m",\n    "scaleDownDelayAfterDelete": "10s",\n    "scaleDownDelayAfterFailure": "3m",\n    "scaleDownUnneededTime": "10m",\n    "scaleDownUnreadyTime": "20m",\n    "scaleDownUtilizationThreshold": "0.5",\n    "scanInterval": "10s",\n    "skipNodesWithLocalStorage": "false",\n    "skipNodesWithSystemPods": "true"\n  },\n  "autoUpgradeProfile": null,\n  "azurePortalFqdn": "mysimpleak-ivanresourcegrou-420752-9a4fdf47.portal.hcp.westeurope.azmk8s.io",\n  "disableLocalAccounts": null,\n  "diskEncryptionSetId": null,\n  "dnsPrefix": "mysimpleak-ivanresourcegrou-420752",\n  "enablePodSecurityPolicy": null,\n  "enableRbac": true,\n  "extendedLocation": null,\n  "fqdn": "mysimpleak-ivanresourcegrou-420752-9a4fdf47.hcp.westeurope.azmk8s.io",\n  "fqdnSubdomain": null,\n  "httpProxyConfig": null,\n  "id": "/subscriptions/xxxx/resourcegroups/ivanresourcegroup/providers/Microsoft.ContainerService/managedClusters/mysimpleaks",\n  "identity": {\n    "principalId": "xxxx",\n    "tenantId": "xxxx",\n    "type": "SystemAssigned",\n    "userAssignedIdentities": null\n  },\n  "identityProfile": {\n    "kubeletidentity": {\n      "clientId": "b0be0d34-1900-4a46-af2d-58cdf7ea6760",\n      "objectId": "b8962aa9-402c-4aa1-9172-26c9ecbd7c02",\n      "resourceId": "/subscriptions/4207529e-1711-48d4-bb4sssss/resourcegroups/MC_ivanresourcegroup_mysimpleaks_westeurope/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mysimpleaks-agentpool"\n    }\n  },\n  "kubernetesVersion": "1.20.9",\n  "linuxProfile": {\n    "adminUsername": "azureuser",\n    "ssh": {\n      "publicKeys": [\n        {\n          "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC2mrO2PzMafQ9hucBGhvlguvz/J46tLpD+TW0vSH2bvEuQXehpCUKX/dn9I3hin8+U8ybhSiTWV1fDpvguORYdA+VexxUPFyYr1L1ytdyGZKPKfWQ7BgsZd+VaOV++u0ieQ0nycL4PTt7d66oX5BwomioXKTC5iIyHUdqL5nmkLiJgLs98hmk8uHqVkzK9gO0+lrWBQc+GKi2WV+6mDm54VYhRSSllzo98MwrK8P5IsYCK9dtWxv6xzE67hc7DUFdOd0+Cqc1uqdLWj8bVzN61rlEGihNFRttKGWluK0Xz5WipVBqgxhC7H/yTWI8a6ZQhIqV2VZMDPwB7vqeb5ied7Xd"\n        }\n      ]\n    }\n  },\n  "location": "westeurope",\n  "maxAgentPools": 100,\n  "name": "mysimpleaks",\n  "networkProfile": {\n    "dnsServiceIp": "10.0.0.10",\n    "dockerBridgeCidr": "172.17.0.1/16",\n    "loadBalancerProfile": {\n      "allocatedOutboundPorts": null,\n      "effectiveOutboundIPs": [\n        {\n          "id": "/subscriptions/4207529e-1711-48d4-bb4a-01836e073bbb/resourceGroups/MC_ivanresourcegroup_mysimpleaks_westeurope/providers/Microsoft.Network/publicIPAddresses/9acfcb09-ca2c-40e5-88ee-d428c3fddb23",\n          "resourceGroup": "MC_ivanresourcegroup_mysimpleaks_westeurope"\n        }\n      ],\n      "idleTimeoutInMinutes": null,\n      "managedOutboundIPs": {\n        "count": 1\n      },\n      "outboundIPs": null,\n      "outboundIpPrefixes": null\n    },\n    "loadBalancerSku": "Standard",\n    "natGatewayProfile": null,\n    "networkMode": null,\n    "networkPlugin": "kubenet",\n    "networkPolicy": null,\n    "outboundType": "loadBalancer",\n    "podCidr": "10.244.0.0/16",\n    "serviceCidr": "10.0.0.0/16"\n  },\n  "nodeResourceGroup": "MC_ivanresourcegroup_mysimpleaks_westeurope",\n  "podIdentityProfile": null,\n  "powerState": {\n    "code": "Running"\n  },\n  "privateFqdn": null,\n  "privateLinkResources": null,\n  "provisioningState": "Succeeded",\n  "resourceGroup": "ivanresourcegroup",\n  "securityProfile": null,\n  "servicePrincipalProfile": {\n    "clientId": "msi",\n    "secret": null\n  },\n  "sku": {\n    "name": "Basic",\n    "tier": "Free"\n  },\n  "tags": null,\n  "type": "Microsoft.ContainerService/ManagedClusters",\n  "windowsProfile": null\n} \n')])])]),a("ul",[a("li",[e._v("The above output shows the cluster is up and running")])]),e._v(" "),a("h2",{attrs:{id:"browse-aks-resources"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#browse-aks-resources"}},[e._v("#")]),e._v(" Browse AKS Resources")]),e._v(" "),a("p",[e._v("The az aks create command created a second resource group named MC_adc-aks-rg_adc-cluster_westeurope containing all resources provisioned for our AKS cluster: The resources are implementation detail behind the cluster. The resources created under this resource groups should not be tocuhed and instead these will be managed by the AKS service.\n"),a("img",{attrs:{src:t(345),alt:"webapp"}}),e._v("\nTo view various details an status of the AKS cluster you can navigate to the cluster resource by either searching for AKS in the search bar or navigating to the resource group")]),e._v(" "),a("ul",[a("li",[e._v("Navigate to AKS resouce in the portal.")]),e._v(" "),a("li",[e._v("To view deployment details navigate workloads. Here you can see the various containers and deployments which are currently running in AKS. Additonaly namespaces, pods and configurations can be viewed here\n"),a("img",{attrs:{src:t(345),alt:"webapp"}})]),e._v(" "),a("li",[e._v("IT is possible to modifiy kubernetes deployments directly in portal.\n"),a("img",{attrs:{src:t(376),alt:"webapp"}})])]),e._v(" "),a("h2",{attrs:{id:"access-the-cluster-with-kubectl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#access-the-cluster-with-kubectl"}},[e._v("#")]),e._v(" Access the cluster with kubectl")]),e._v(" "),a("p",[e._v("While accessing the cluster via the portal is convienent, the most common way users interacte with kubernetres is via the command line tool "),a("code",[e._v("kubectl")]),e._v("\nTo authenticate us against the cluster Kubernetes uses client certificates and access tokens.\nTo obtain these access credentials for our newly created cluster we use the "),a("code",[e._v("az aks get-credentials")]),e._v(" command:")]),e._v(" "),a("h3",{attrs:{id:"get-credentials"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-credentials"}},[e._v("#")]),e._v(" Get credentials")]),e._v(" "),a("p",[e._v("To pull down credentials execute the following command")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("az aks get-credentials --resource-group $RESOURCE_GROUP --name $AKS_CLUSTER\n")])])]),a("h3",{attrs:{id:"perform-commands"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#perform-commands"}},[e._v("#")]),e._v(" Perform commands")]),e._v(" "),a("ul",[a("li",[e._v("The following command show all namespaces in the cluster")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ivan@Azure:~$ kubectl get namespaces -A\nNAME              STATUS   AGE\ndefault           Active   40m\nkube-node-lease   Active   40m\nkube-public       Active   40m\nkube-system       Active   40m\n")])])]),a("ul",[a("li",[e._v("The following command show all pod running in the cluster")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ivan@Azure:~$ kubectl  get pod -A\nNAMESPACE     NAME                                  READY   STATUS    RESTARTS   AGE\nkube-system   azure-ip-masq-agent-4hhkd             1/1     Running   0          38m\nkube-system   coredns-autoscaler-54d55c8b75-bx9nd   1/1     Running   0          39m\nkube-system   coredns-d4866bcb7-cv7gs               1/1     Running   0          38m\nkube-system   coredns-d4866bcb7-jnm69               1/1     Running   0          39m\nkube-system   kube-proxy-hlcfj                      1/1     Running   0          38m\nkube-system   metrics-server-569f6547dd-nfx2t       1/1     Running   0          39m\nkube-system   tunnelfront-74454f7fd6-j6q8t          1/1     Running   0          39m\n")])])]),a("ul",[a("li",[e._v("the following convience command create a simple nginx deployment callled nginx")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ivan@Azure:~$ kubectl create deployment nginx  --image nginx\ndeployment.apps/nginx created\n")])])]),a("ul",[a("li",[e._v("once created execute the following command to show the status of the deployment.  A deployment controls and orchestrates a pod. if the pod goes down then the deployment ensures a second pod comes up")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ivan@Azure:~$ kubectl get deployment\nNAME    READY   UP-TO-DATE   AVAILABLE   AGE\nnginx   1/1     1            1           18s\n")])])]),a("ul",[a("li",[e._v("View the pods belonging to the deployment")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ivan@Azure:~$ kubectl get po\nNAME                     READY   STATUS    RESTARTS   AGE\nnginx-6799fc88d8-sbbrx   1/1     Running   0          12s\n")])])]),a("ul",[a("li",[e._v("clean up the resources. Aftet theis command is executed check if the pods are still there")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('ivan@Azure:~$ kubectl delete deployment nginx\ndeployment.apps "nginx" deleted\nivan@Azure:~$\nivan@Azure:~$ kubectl get po\nNo resources found in default namespace.\nivan@Azure:~$\n')])])]),a("h2",{attrs:{id:"conculsion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conculsion"}},[e._v("#")]),e._v(" Conculsion")]),e._v(" "),a("p",[e._v("In this lab we successfully deployed a kubernetes cluster attached to our registry and deployed with node auto-scaler.")])])}),[],!1,null,null,null);n.default=s.exports}}]);